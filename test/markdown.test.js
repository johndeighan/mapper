// Generated by CoffeeScript 2.7.0
  // markdown.test.coffee
import {
  LOG,
  LOGVALUE,
  setDebugging,
  assert,
  croak
} from '@jdeighan/exceptions';

import {
  UnitTester,
  UnitTesterNorm
} from '@jdeighan/unit-tester';

import {
  undef
} from '@jdeighan/coffee-utils';

import {
  mydir
} from '@jdeighan/coffee-utils/fs';

import {
  markdownify,
  SimpleMarkDownMapper
} from '@jdeighan/mapper/markdown';

// ---------------------------------------------------------------------------
(function() {
  var MarkdownTester, mdTester;
  MarkdownTester = class MarkdownTester extends UnitTesterNorm {
    transformValue(text) {
      return markdownify(text);
    }

  };
  mdTester = new MarkdownTester();
  // ..........................................................
  mdTester.equal(26, `title
=====
text`, `<h1>title</h1>
<p>text</p>`);
  mdTester.equal(35, `title
-----
text`, `<h2>title</h2>
<p>text</p>`);
  // --- Comments and blank lines are stripped
  mdTester.equal(46, `# title
text`, `<p>text</p>`);
  mdTester.equal(53, `# title
text`, `<p>text</p>`);
  mdTester.equal(60, `this is **bold** text`, `<p>this is <strong>bold</strong> text</p>`);
  return mdTester.equal(66, `\`\`\`javascript
		adapter: adapter({
			pages: 'build',
			assets: 'build',
			fallback: null,
			})
\`\`\``, `<pre><code class="language-javascript"> adapter: adapter(&lbrace;
pages: &#39;build&#39;,
assets: &#39;build&#39;,
fallback: null,
&rbrace;)
</code></pre>`);
})();

// ---------------------------------------------------------------------------
// Test SimpleMarkDownMapper
(function() {
  var MarkdownTester, mdTester;
  MarkdownTester = class MarkdownTester extends UnitTester {
    transformValue(block) {
      var getter;
      getter = new SimpleMarkDownMapper(import.meta.url, block);
      return getter.getBlock();
    }

  };
  mdTester = new MarkdownTester();
  // ..........................................................
  mdTester.equal(101, `A title
=======

some text
`, `<h1>A title</h1>
<p>some text</p>`);
  mdTester.equal(112, `A title
=======

A subtitle
----------

some text
`, `<h1>A title</h1>
<h2>A subtitle</h2>
<p>some text</p>`);
  mdTester.equal(127, `=======

some text
`, `<p>=======</p>
<p>some text</p>`);
  return mdTester.equal(137, `A title
=======
# this is a comment
some text
`, `<h1>A title</h1>
<p>some text</p>`);
})();
