{
  "version": 3,
  "file": "Symbols.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\Symbols.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# Symbols.test.coffee\n\nimport {undef, OL, words, isEmpty} from '@jdeighan/base-utils'\nimport {assert, croak} from '@jdeighan/base-utils/exceptions'\nimport {LOG} from '@jdeighan/base-utils/log'\nimport {setDebugging} from '@jdeighan/base-utils/debug'\nimport {\n\tUnitTesterNorm, UnitTester, utest,\n\t} from '@jdeighan/unit-tester'\nimport {mydir, mkpath} from '@jdeighan/coffee-utils/fs'\nimport {joinBlocks} from '@jdeighan/coffee-utils/block'\n\nimport {\n\tgetAvailSymbols, getNeededSymbols, buildImportList,\n\t} from '@jdeighan/mapper/symbols'\n\ndumpfile = \"c:/Users/johnd/string-input/test/ast.txt\"\n\n# ---------------------------------------------------------------------------\n# Contents of .symbols:\n# fs\n# \t*fs exists readFile\n#\n# @jdeighan/base-utils/fs\n# \tmkpath slurp barf\n#\n# @jdeighan/coffee-utils\n# \tsay undef\n#\n# @jdeighan/coffee-utils/fs\n# \tmydir\n#\n# @jdeighan/coffee-utils/log\n# \tlog/logger\n\nutest.equal 36, getAvailSymbols(import.meta.url), {\n\tbarf: {\n\t\tlib: '@jdeighan/base-utils/fs',\n\t\t},\n\texists: {\n\t\tlib: 'fs',\n\t\t},\n\tfs: {\n\t\tisDefault: true,\n\t\tlib: 'fs',\n\t\t},\n\tlogger: {\n\t\tlib: '@jdeighan/coffee-utils/log',\n\t\tsrc: 'log',\n\t\t},\n\tmkpath: {\n\t\tlib: '@jdeighan/base-utils/fs',\n\t\t},\n\tmydir: {\n\t\tlib: '@jdeighan/coffee-utils/fs',\n\t\t},\n\treadFile: {\n\t\tlib: 'fs',\n\t\t},\n\tsay: {\n\t\tlib: '@jdeighan/coffee-utils',\n\t\t},\n\tslurp: {\n\t\tlib: '@jdeighan/base-utils/fs',\n\t\t},\n\tundef: {\n\t\tlib: '@jdeighan/coffee-utils',\n\t\t},\n\t}\n\n# ---------------------------------------------------------------------------\n\nclass SymbolsTester extends UnitTester\n\n\ttransformValue: (text) ->\n\t\treturn getNeededSymbols(text)\n\nsymTester = new SymbolsTester()\n\n# ---------------------------------------------------------------------------\n\nutest.equal 82, getNeededSymbols(\"\"\"\n\tname = 'John'\n\t\"\"\"), []\n\nutest.equal 86, getNeededSymbols(\"\"\"\n\tx = 23\n\ty = x + 5\n\t\"\"\"), []\n\nutest.equal 91, getNeededSymbols(\"\"\"\n\tx = 23\n\ty = x + 5\n\t\"\"\"), []\n\nutest.equal 96, getNeededSymbols(\"\"\"\n\tx = z\n\ty = x + 5\n\t\"\"\"), ['z']\n\nutest.equal 101, getNeededSymbols(\"\"\"\n\tx = myfunc(4)\n\ty = x + 5\n\t\"\"\"), ['myfunc']\n\nutest.equal 106, getNeededSymbols(\"\"\"\n\timport {z} from 'somewhere'\n\tx = z\n\ty = x + 5\n\t\"\"\"), []\n\nutest.equal 112, getNeededSymbols(\"\"\"\n\timport {myfunc} from 'somewhere'\n\tx = myfunc(4)\n\ty = x + 5\n\t\"\"\"), []\n\n# ---------------------------------------------------------------------------\n#    Test auto-import\n# ---------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# --- make sure it's using the testing .symbols file\n\nhSymbols = getAvailSymbols(import.meta.url)\nutest.equal 126, hSymbols, {\n\t\tfs:      {lib: 'fs', isDefault: true}\n\t\texists:  {lib: 'fs'}\n\t\treadFile:{lib: 'fs'}\n\t\tbarf:    {lib: '@jdeighan/base-utils/fs'}\n\t\tlogger:  {lib: '@jdeighan/coffee-utils/log', src: 'log'}\n\t\tmkpath:  {lib: '@jdeighan/base-utils/fs'}\n\t\tmydir:   {lib: '@jdeighan/coffee-utils/fs'}\n\t\tsay:     {lib: '@jdeighan/coffee-utils'}\n\t\tslurp:   {lib: '@jdeighan/base-utils/fs'}\n\t\tundef:   {lib: '@jdeighan/coffee-utils'}\n\t\t}\n\n# ----------------------------------------------------------------------------\n\n(() ->\n\ttext = \"\"\"\n\t\t\tx = 42\n\t\t\tsay \"Answer is 42\"\n\t\t\t\"\"\"\n\n\tlImports = [\n\t\t\"import {say} from '@jdeighan/coffee-utils'\",\n\t\t\"import {slurp} from '#jdeighan/base-utils/fs'\",\n\t\t]\n\n\tutest.equal 152, joinBlocks(lImports..., text), \"\"\"\n\t\t\timport {say} from '@jdeighan/coffee-utils'\n\t\t\timport {slurp} from '#jdeighan/base-utils/fs'\n\t\t\tx = 42\n\t\t\tsay \"Answer is 42\"\n\t\t\t\"\"\"\n\t)()\n\n# ----------------------------------------------------------------------------\n\n(() ->\n\tutest.equal 163, buildImportList([]), {lImports: [], lNotFound: []}\n\n\tlMissing = words('say undef logger slurp barf fs')\n\tutest.equal 166, buildImportList(lMissing, import.meta.url), {\n\t\tlImports: [\n\t\t\t\"import fs from 'fs'\"\n\t\t\t\"import {slurp,barf} from '@jdeighan/base-utils/fs'\"\n\t\t\t\"import {say,undef} from '@jdeighan/coffee-utils'\"\n\t\t\t\"import {log as logger} from '@jdeighan/coffee-utils/log'\"\n\t\t\t],\n\t\tlNotFound: []\n\t\t}\n\n\t)()\n"
  ]
}