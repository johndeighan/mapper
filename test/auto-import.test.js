// Generated by CoffeeScript 2.5.1
// auto-import.test.coffee
var dumpfile, hSymbols, simple, testDir;

import {
  strict as assert
} from 'assert';

import {
  undef,
  setUnitTesting,
  words
} from '@jdeighan/coffee-utils';

import {
  mydir,
  mkpath
} from '@jdeighan/coffee-utils/fs';

import {
  UnitTester
} from '@jdeighan/coffee-utils/test';

import {
  debug,
  setDebugging
} from '@jdeighan/coffee-utils/debug';

import {
  mergeNeededSymbols,
  getNeededSymbols,
  buildImportList,
  getNeededImports,
  getMissingSymbols,
  getAvailSymbols,
  addImports
} from '@jdeighan/string-input/coffee';

testDir = mydir(import.meta.url);

process.env.DIR_SYMBOLS = testDir;

simple = new UnitTester();

dumpfile = "c:/Users/johnd/string-input/test/ast.txt";

setUnitTesting(true);

// ----------------------------------------------------------------------------
// --- make sure it's using the testing .symbols file
hSymbols = getAvailSymbols();

simple.equal(26, hSymbols, {
  barf: '@jdeighan/coffee-utils/fs',
  log: '@jdeighan/coffee-utils/log',
  mkpath: '@jdeighan/coffee-utils/fs',
  mydir: '@jdeighan/coffee-utils/fs',
  say: '@jdeighan/coffee-utils',
  slurp: '@jdeighan/coffee-utils/fs',
  undef: '@jdeighan/coffee-utils'
});

// ----------------------------------------------------------------------------
(function() {
  var lImports, text;
  text = `x = 42
say "Answer is 42"`;
  lImports = ["import {say} from '@jdeighan/coffee-utils'", "import {slurp} from '#jdeighan/coffee-utils/fs'"];
  return simple.equal(49, addImports(text, lImports), `import {say} from '@jdeighan/coffee-utils'
import {slurp} from '#jdeighan/coffee-utils/fs'
x = 42
say "Answer is 42"`);
})();

// ----------------------------------------------------------------------------
(function() {
  var hAllNeeded, hNeeded;
  hAllNeeded = {};
  hNeeded = {
    '@jdeighan/coffee-utils': ['say', 'undef'],
    '@jdeighan/coffee-utils/log': ['log']
  };
  mergeNeededSymbols(hAllNeeded, hNeeded);
  return simple.equal(65, hAllNeeded, {
    '@jdeighan/coffee-utils': ['say', 'undef'],
    '@jdeighan/coffee-utils/log': ['log']
  });
})();

// ----------------------------------------------------------------------------
(function() {
  var hAllNeeded, hNeeded;
  hAllNeeded = {
    '@jdeighan/coffee-utils': ['say'],
    '@jdeighan/coffee-utils/fs': ['slurp']
  };
  hNeeded = {
    '@jdeighan/coffee-utils': ['undef', 'say'],
    '@jdeighan/coffee-utils/log': ['log'],
    '@jdeighan/coffee-utils/fs': ['barf']
  };
  mergeNeededSymbols(hAllNeeded, hNeeded);
  return simple.equal(82, hAllNeeded, {
    '@jdeighan/coffee-utils': ['say', 'undef'],
    '@jdeighan/coffee-utils/log': ['log'],
    '@jdeighan/coffee-utils/fs': ['slurp', 'barf']
  });
})();

// ----------------------------------------------------------------------------
(function() {
  var hAllNeeded;
  hAllNeeded = {
    '@jdeighan/coffee-utils': ['say', 'undef'],
    '@jdeighan/coffee-utils/log': ['log'],
    '@jdeighan/coffee-utils/fs': ['slurp', 'barf']
  };
  return simple.equal(95, buildImportList(hAllNeeded), ["import {say,undef} from '@jdeighan/coffee-utils'", "import {slurp,barf} from '@jdeighan/coffee-utils/fs'", "import {log} from '@jdeighan/coffee-utils/log'"]);
})();

// ----------------------------------------------------------------------------
(function() {
  var code, lImports;
  code = `say "Hi, there!"
for list in lLists
	barf "myfile.txt", list`;
  lImports = getNeededImports(code);
  return simple.equal(110, lImports, ["import {say} from '@jdeighan/coffee-utils'", "import {barf} from '@jdeighan/coffee-utils/fs'"]);
})();

// ----------------------------------------------------------------------------
(function() {
  var code, hMissingSymbols;
  code = `say "Hi, there!"
for list in lLists
	barf "myfile.txt", list`;
  hMissingSymbols = getMissingSymbols(code);
  return simple.equal(125, hMissingSymbols, {
    say: {},
    lLists: {},
    barf: {}
  });
})();
