{
  "version": 3,
  "file": "cielo.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\cielo.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# cielo.test.coffee\n\nimport {undef, isEmpty, nonEmpty} from '@jdeighan/base-utils'\nimport {assert} from '@jdeighan/base-utils/exceptions'\nimport {LOG, LOGVALUE} from '@jdeighan/base-utils/log'\nimport {setDebugging} from '@jdeighan/base-utils/debug'\nimport {\n\tUnitTesterNorm, UnitTester, utest,\n\t} from '@jdeighan/unit-tester'\n\nimport {map} from '@jdeighan/mapper'\nimport {TreeMapper} from '@jdeighan/mapper/tree'\nimport {\n\tCieloToJSCodeMapper, CieloToJSExprMapper,\n\tcieloToJSCode, cieloToJSExpr,\n\t} from '@jdeighan/mapper/cielo'\n\n# ---------------------------------------------------------------------------\n# --- Features:\n#        - REMOVE blank lines\n#        - #include <file>\n#        - handle continuation lines\n#        - replace FILE, LINE, DIR and SRC\n#        - stop on __END__\n#        - handle HEREDOC - various types\n#        - add auto-imports\n# ---------------------------------------------------------------------------\n\n(() ->\n\tclass CieloTester extends UnitTester\n\n\t\ttransformValue: (code) ->\n\n\t\t\thSource = {content: code, source: 'cielo.test.js'}\n\t\t\treturn map(hSource, TreeMapper)\n\n\tcieloTester = new CieloTester(import.meta.url)\n\n\t# ------------------------------------------------------------------------\n\t# --- test removing comments\n\n\tcieloTester.equal 44, \"\"\"\n\t\t\t# --- a comment\n\t\t\ty = x\n\t\t\t\"\"\", \"\"\"\n\t\t\ty = x\n\t\t\t\"\"\"\n\n\t# ------------------------------------------------------------------------\n\t# --- test removing blank lines\n\n\tcieloTester.equal 54, \"\"\"\n\t\t\ty = x\n\n\t\t\t\"\"\", \"\"\"\n\t\t\ty = x\n\t\t\t\"\"\"\n\n\t# ------------------------------------------------------------------------\n\t# --- test include files - include.txt is:\n\t# y = f(2*3)\n\t# for i in range(5)\n\t#    y *= i\n\n\tcieloTester.equal 67, \"\"\"\n\t\t\tfor x in [1,5]\n\t\t\t\t#include include.txt\n\t\t\t\"\"\", \"\"\"\n\t\t\tfor x in [1,5]\n\t\t\t\ty = f(2*3)\n\t\t\t\tfor i in range(5)\n\t\t\t\t\ty *= i\n\t\t\t\"\"\"\n\n\t# ------------------------------------------------------------------------\n\t# --- test continuation lines\n\n\tcieloTester.equal 80, \"\"\"\n\t\t\tx = 23\n\t\t\ty = x\n\t\t\t\t\t+ 5\n\t\t\t\"\"\", \"\"\"\n\t\t\tx = 23\n\t\t\ty = x + 5\n\t\t\t\"\"\"\n\n\t# ------------------------------------------------------------------------\n\t# --- can't use backslash continuation lines\n\n\tcieloTester.equal 92, \"\"\"\n\t\t\tx = 23\n\t\t\ty = x \\\n\t\t\t+ 5\n\t\t\t\"\"\", \"\"\"\n\t\t\tx = 23\n\t\t\ty = x \\\n\t\t\t+ 5\n\t\t\t\"\"\"\n\n\t# ------------------------------------------------------------------------\n\t# --- test replacing LINE, FILE, DIR\n\n\tcieloTester.equal 105, \"\"\"\n\t\t\tx = 23\n\t\t\ty = \"line __LINE__ in __FILE__\"\n\t\t\t+ 5\n\t\t\t\"\"\", \"\"\"\n\t\t\tx = 23\n\t\t\ty = \"line 2 in cielo.test.js\"\n\t\t\t+ 5\n\t\t\t\"\"\"\n\n\tcieloTester.equal 115, \"\"\"\n\t\t\tstr = <<<\n\t\t\t\tabc\n\t\t\t\tdef\n\n\t\t\tx = 42\n\t\t\t\"\"\", \"\"\"\n\t\t\tstr = \"abc\\\\ndef\"\n\t\t\tx = 42\n\t\t\t\"\"\"\n\n\tcieloTester.equal 126, \"\"\"\n\t\t\tstr = <<<\n\t\t\t\t===\n\t\t\t\tabc\n\t\t\t\tdef\n\n\t\t\tx = 42\n\t\t\t\"\"\", \"\"\"\n\t\t\tstr = \"abc\\\\ndef\"\n\t\t\tx = 42\n\t\t\t\"\"\"\n\n\tcieloTester.equal 138, \"\"\"\n\t\t\tstr = <<<\n\t\t\t\t...this is a\n\t\t\t\t\tlong line\n\t\t\t\"\"\", \"\"\"\n\t\t\tstr = \"this is a long line\"\n\t\t\t\"\"\"\n\n\tcieloTester.equal 146, \"\"\"\n\t\t\tlItems = <<<\n\t\t\t\t---\n\t\t\t\t- a\n\t\t\t\t- b\n\t\t\t\"\"\", \"\"\"\n\t\t\tlItems = [\"a\",\"b\"]\n\t\t\t\"\"\"\n\n\tcieloTester.equal 155, \"\"\"\n\t\t\thItems = <<<\n\t\t\t\t---\n\t\t\t\ta: 13\n\t\t\t\tb: 42\n\t\t\t\"\"\", \"\"\"\n\t\t\thItems = {\"a\":13,\"b\":42}\n\t\t\t\"\"\"\n\n\tcieloTester.equal 164, \"\"\"\n\t\t\tlItems = <<<\n\t\t\t\t---\n\t\t\t\t-\n\t\t\t\t\ta: 13\n\t\t\t\t\tb: 42\n\t\t\t\t-\n\t\t\t\t\tc: 2\n\t\t\t\t\td: 3\n\t\t\t\"\"\", \"\"\"\n\t\t\tlItems = [{\"a\":13,\"b\":42},{\"c\":2,\"d\":3}]\n\t\t\t\"\"\"\n\n\tcieloTester.equal 177, \"\"\"\n\t\t\tfunc(<<<, <<<, <<<)\n\t\t\t\ta block\n\t\t\t\tof text\n\n\t\t\t\t---\n\t\t\t\t- a\n\t\t\t\t- b\n\n\t\t\t\t---\n\t\t\t\ta: 13\n\t\t\t\tb: 42\n\t\t\t\"\"\", \"\"\"\n\t\t\tfunc(\"a block\\\\nof text\", [\"a\",\"b\"], {\"a\":13,\"b\":42})\n\t\t\t\"\"\"\n\n\tcieloTester.equal 193, \"\"\"\n\t\t\tx = 42\n\t\t\tfunc(x, \"abc\")\n\t\t\t__END__\n\t\t\tThis is extraneous text\n\t\t\twhich should be ignored\n\t\t\t\"\"\", \"\"\"\n\t\t\tx = 42\n\t\t\tfunc(x, \"abc\")\n\t\t\t\"\"\"\n\n\t# --- Make sure triple quoted strings are passed through as is\n\n\tcieloTester.equal 206, \"\"\"\n\t\t\tstr = \\\"\\\"\\\"\n\t\t\t\tthis is a\n\t\t\t\tlong string\n\t\t\t\t\\\"\\\"\\\"\n\t\t\t\"\"\", \"\"\"\n\t\t\tstr = \\\"\\\"\\\"\n\t\t\t\tthis is a\n\t\t\t\tlong string\n\t\t\t\t\\\"\\\"\\\"\n\t\t\t\"\"\"\n\n\t# --- Make sure triple quoted strings are passed through as is\n\n\tcieloTester.equal 220, '''\n\t\t\tstr = \"\"\"\n\t\t\t\tthis is a\n\t\t\t\tlong string\n\t\t\t\t\"\"\"\n\t\t\t''', '''\n\t\t\tstr = \"\"\"\n\t\t\t\tthis is a\n\t\t\t\tlong string\n\t\t\t\t\"\"\"\n\t\t\t'''\n\n\t# --- Make sure triple quoted strings are passed through as is\n\n\tcieloTester.equal 234, \"\"\"\n\t\t\tstr = '''\n\t\t\t\tthis is a\n\t\t\t\tlong string\n\t\t\t\t'''\n\t\t\t\"\"\", \"\"\"\n\t\t\tstr = '''\n\t\t\t\tthis is a\n\t\t\t\tlong string\n\t\t\t\t'''\n\t\t\t\"\"\"\n\n\n\t)()\n\n# ----------------------------------------------------------------------------\n\n(() ->\n\thInput = {\n\t\t# --- must supply source, else wrong .symbols file is used\n\t\tsource: import.meta.url\n\t\tcontent: \"\"\"\n\t\t\t# --- temp.cielo\n\t\t\tif fs.existsSync('file.txt')\n\t\t\t\tlogger \"file exists\"\n\t\t\t\"\"\"\n\t\t}\n\tjsCode = cieloToJSCode(hInput)\n\n\tutest.equal 266, jsCode, \"\"\"\n\t\t\timport fs from 'fs';\n\t\t\timport {log as logger} from '@jdeighan/coffee-utils/log';\n\t\t\t// --- temp.cielo\n\t\t\tif (fs.existsSync('file.txt')) {\n\t\t\t  logger(\"file exists\");\n\t\t\t}\n\t\t\t\"\"\"\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\n\tclass CieloTester extends UnitTesterNorm\n\n\t\ttransformValue: (code) ->\n\n\t\t\thInput = {\n\t\t\t\t# --- must supply source, else wrong .symbols file is used\n\t\t\t\tsource: import.meta.url\n\t\t\t\tcontent: code\n\t\t\t\t}\n#\t\t\treturn map(hInput, CieloToJSCodeMapper)\n\t\t\treturn cieloToJSCode(hInput)\n\n\tcieloTester = new CieloTester('cielo.test')\n\n\t# --- Should auto-import mydir & mkpath from @jdeighan/coffee-utils/fs\n\n\tcieloTester.equal 295, \"\"\"\n\t\t\tdir = mydir(import.meta.url)\n\t\t\tfilepath = mkpath(dir, 'test.txt')\n\t\t\t\"\"\", \"\"\"\n\t\t\timport {mkpath} from '@jdeighan/base-utils/fs';\n\t\t\timport {mydir} from '@jdeighan/coffee-utils/fs';\n\t\t\tvar dir, filepath;\n\t\t\tdir = mydir(import.meta.url);\n\t\t\tfilepath = mkpath(dir, 'test.txt');\n\t\t\t\"\"\"\n\n\t# --- But not if we're already importing them\n\n\tcieloTester.equal 307, \"\"\"\n\t\t\timport {mkpath,mydir} from '@jdeighan/coffee-utils/fs'\n\t\t\tdir = mydir(import.meta.url)\n\t\t\tfilepath = mkpath(dir, 'test.txt')\n\t\t\t\"\"\", \"\"\"\n\t\t\tvar dir, filepath;\n\t\t\timport {\n\t\t\t\tmkpath,\n\t\t\t\tmydir\n\t\t\t\t} from '@jdeighan/coffee-utils/fs';\n\t\t\tdir = mydir(import.meta.url);\n\t\t\tfilepath = mkpath(dir, 'test.txt');\n\t\t\t\"\"\"\n\n\tcieloTester.equal 321, \"\"\"\n\t\t\tx = undef\n\t\t\t\"\"\", \"\"\"\n\t\t\timport {undef} from '@jdeighan/coffee-utils';\n\t\t\tvar x;\n\t\t\tx = undef;\n\t\t\t\"\"\"\n\n\tcieloTester.equal 329, \"\"\"\n\t\t\tx = undef\n\t\t\tcontents = 'this is a file'\n\t\t\tfs.writeFileSync('temp.txt', contents, {encoding: 'utf8'})\n\t\t\t\"\"\", \"\"\"\n\t\t\timport fs from 'fs';\n\t\t\timport {undef} from '@jdeighan/coffee-utils';\n\t\t\tvar contents, x;\n\t\t\tx = undef;\n\t\t\tcontents = 'this is a file';\n\t\t\tfs.writeFileSync('temp.txt', contents, {\n\t\t\t\tencoding: 'utf8'\n\t\t\t\t});\n\t\t\t\"\"\"\n\n\tcieloTester.equal 344, \"\"\"\n\t\t\tx = 23\n\t\t\tlogger x\n\t\t\t\"\"\", \"\"\"\n\t\t\timport {log as logger} from '@jdeighan/coffee-utils/log';\n\t\t\tvar x;\n\t\t\tx = 23;\n\t\t\tlogger(x);\n\t\t\t\"\"\"\n\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test subclassing TreeMapper\n#     retain '# ||||' style comments\n\n(() ->\n\tclass MyMapper extends TreeMapper\n\n\t\tmapComment: (hNode) ->\n\n\t\t\t{str, _commentText} = hNode\n\t\t\tif (_commentText.indexOf('||||') == 0)\n\t\t\t\treturn str\n\t\t\telse\n\t\t\t\treturn undef\n\n\tclass CieloTester extends UnitTester\n\n\t\ttransformValue: (code) ->\n\n\t\t\treturn map(code, MyMapper)\n\n\tcieloTester = new CieloTester(import.meta.url)\n\n\t# ------------------------------------------------------------------------\n\n\tcieloTester.equal 381, \"\"\"\n\t\t\t# --- a comment\n\t\t\t# |||| stuff\n\t\t\ty = x\n\t\t\t\"\"\", \"\"\"\n\t\t\t# |||| stuff\n\t\t\ty = x\n\t\t\t\"\"\"\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- test subclassing CieloToJSCodeMapper\n#     retain '# ||||' style comments\n\n(() ->\n\tclass MyMapper extends CieloToJSCodeMapper\n\n\t\tmapComment: (hNode) ->\n\n\t\t\t{str, _commentText} = hNode\n\t\t\tif (_commentText.indexOf('||||') == 0)\n\t\t\t\treturn str\n\t\t\telse\n\t\t\t\treturn undef\n\n\tclass CieloTester extends UnitTester\n\n\t\ttransformValue: (code) ->\n\n\t\t\treturn map(code, MyMapper)\n\n\tcieloTester = new CieloTester(import.meta.url)\n\n\t# ------------------------------------------------------------------------\n\n\tcieloTester.equal 416, \"\"\"\n\t\t\t# --- a comment\n\t\t\t# |||| stuff\n\t\t\ty = x\n\t\t\t\"\"\", \"\"\"\n\t\t\t// |||| stuff\n\t\t\tvar y;\n\t\t\ty = x;\n\t\t\t\"\"\"\n\t)()\n"
  ]
}