{
  "version": 3,
  "file": "TamlMapper.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\TamlMapper.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# TamlMapper.coffee\r\n\r\nimport {\r\n\tundef, pass, defined, notdefined, isEmpty, nonEmpty, oneof, OL,\r\n\tisString, isArray, isHash,\r\n\t} from '@jdeighan/base-utils'\r\nimport {assert, croak} from '@jdeighan/base-utils/exceptions'\r\nimport {dbgEnter, dbgReturn, dbg} from '@jdeighan/base-utils/debug'\r\nimport {TreeMapper} from '@jdeighan/mapper/tree'\r\n\r\nexport lQuote = '«'\r\nexport rQuote = '»'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport parseValue = (str) =>\r\n\r\n\tdbgEnter 'parseValue', str\r\n\tassert isString(str), \"not a string\"\r\n\tswitch str\r\n\t\twhen 'undef'\r\n\t\t\tresult = undef\r\n\t\twhen 'null'\r\n\t\t\tresult = null\r\n\t\twhen 'true'\r\n\t\t\tresult = true\r\n\t\twhen 'false'\r\n\t\t\tresult = false\r\n\t\telse\r\n\t\t\tresult = parseFloat(str)\r\n\t\t\tif isNaN(result)\r\n\t\t\t\tif lMatches = str.match(///^ « (.*) » $///)\r\n\t\t\t\t\tresult = lMatches[1]\r\n\t\t\t\telse\r\n\t\t\t\t\tresult = str\r\n\tdbgReturn 'parseValue', result\r\n\treturn result\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class TamlMapper extends TreeMapper\r\n\r\n\tconstructor: (hInput, options) ->\r\n\r\n\t\tdbgEnter 'TamlMapper', hInput, options\r\n\t\tsuper hInput, options\r\n\t\tfirstNode = @fetch()\r\n\t\tassert (firstNode.str == '---'), \"missing header\"\r\n\t\tdbgReturn 'TamlMapper', this\r\n\r\n\t# ..........................................................\r\n\r\n\tgetUserObj: (hNode) ->\r\n\r\n\t\t{str} = hNode\r\n\t\tif (str == '-')\r\n\t\t\treturn {\r\n\t\t\t\ttype: 'listItem'\r\n\t\t\t\t}\r\n\t\tif lMatches = str.match(///^ - \\s* (.*) $///)\r\n\t\t\t[_, valStr] = lMatches\r\n\t\t\tassert nonEmpty(valStr), \"valStr is empty\"\r\n\t\t\treturn {\r\n\t\t\t\ttype: 'listItem'\r\n\t\t\t\tvalue: parseValue(valStr)\r\n\t\t\t\t}\r\n\t\tif lMatches = str.match(///^ (\\S+) : \\s* (.*) $///)\r\n\t\t\t[_, key, valStr] = lMatches\r\n\t\t\tif (valStr.length == 0)\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttype: 'hashItem'\r\n\t\t\t\t\tkey\r\n\t\t\t\t\t}\r\n\t\t\telse\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttype: 'hashItem'\r\n\t\t\t\t\tkey\r\n\t\t\t\t\tvalue: parseValue(valStr)\r\n\t\t\t\t\t}\r\n\t\treturn {\r\n\t\t\ttype: 'value'\r\n\t\t\tvalue: parseValue(str)\r\n\t\t\t}\r\n\r\n\t# ..........................................................\r\n\r\n\tbeginWalk: (hGlobalEnv) ->\r\n\r\n\t\thGlobalEnv.isSet = false\r\n\t\t# --- hGlobalEnv.value is set later\r\n\t\treturn undef\r\n\r\n\t# ..........................................................\r\n\r\n\tbeginLevel: (hEnv) ->\r\n\r\n\t\thEnv.isSet = false\r\n\t\t# --- hEnv.value is set later\r\n\t\treturn undef\r\n\r\n\t# ..........................................................\r\n\r\n\tvisit: (hNode, hEnv, hParEnv) ->\r\n\r\n\t\tdbgEnter 'visit', hNode\r\n\t\tassert isHash(hEnv), \"missing env\"\r\n\t\tassert isHash(hParEnv), \"missing parent env\"\r\n\r\n\t\tparValue = hParEnv.value  # --- unpack parent environment\r\n\t\t{uobj} = hNode\r\n\t\tswitch uobj.type\r\n\r\n\t\t\twhen 'listItem'\r\n\t\t\t\tif hParEnv.isSet\r\n\t\t\t\t\tdbg \"hParEnv.value already set to #{OL(parValue)}\"\r\n\t\t\t\t\tassert isArray(parValue),\r\n\t\t\t\t\t\t\"list item, but parent value is #{OL(parValue)}\"\r\n\t\t\t\telse\r\n\t\t\t\t\tdbg \"set hParEnv.value to []\"\r\n\t\t\t\t\thParEnv.value = []\r\n\t\t\t\t\thParEnv.isSet = true\r\n\r\n\t\t\twhen 'hashItem'\r\n\t\t\t\tassert uobj.hasOwnProperty('key'), \"missing key\"\r\n\t\t\t\tassert nonEmpty(uobj.key), \"empty key\"\r\n\t\t\t\tif hParEnv.isSet\r\n\t\t\t\t\tdbg \"hParEnv.value already set to #{OL(parValue)}\"\r\n\t\t\t\t\tassert isHash(parValue),\r\n\t\t\t\t\t\t\"hash item, but parent value is #{OL(parValue)}\"\r\n\t\t\t\telse\r\n\t\t\t\t\tdbg \"set hParEnv.value to {}\"\r\n\t\t\t\t\thParEnv.value = {}\r\n\t\t\t\t\thParEnv.isSet = true\r\n\r\n\t\t\twhen 'value'\r\n\t\t\t\tcroak \"Not Implemented\"\r\n\r\n\t\tif uobj.hasOwnProperty('value')\r\n\t\t\t# --- This should cause any children to throw error\r\n\t\t\thEnv.isSet = true\r\n\t\t\thEnv.value = uobj.value\r\n\t\telse\r\n\t\t\thEnv.isSet = false\r\n\r\n\t\tdbg 'final hNode', hNode\r\n\t\tdbgReturn 'visit', undef\r\n\t\treturn undef\r\n\r\n\t# ..........................................................\r\n\r\n\tendVisit: (hNode, hEnv, hParEnv) ->\r\n\r\n\t\tdbgEnter 'endVisit', hNode\r\n\t\tassert isHash(hEnv), \"missing env\"\r\n\t\tassert isHash(hParEnv), \"missing parent env\"\r\n\r\n\t\ttype = hNode.uobj.type\r\n\t\tkey = hNode.uobj.key\r\n\t\tif hParEnv.isSet\r\n\t\t\tif isArray(hParEnv.value)\r\n\t\t\t\tassert (type == 'listItem'), \"type = #{OL(type)}\"\r\n\t\t\t\tdbg \"push to parent list: #{OL(hEnv.value)}\"\r\n\t\t\t\thParEnv.value.push hEnv.value\r\n\t\t\telse if isHash(hParEnv.value)\r\n\t\t\t\tassert (type == 'hashItem'), \"type = #{OL(type)}\"\r\n\t\t\t\tdbg \"add to parent hash: #{OL(key)}: #{OL(hEnv.value)}\"\r\n\t\t\t\thParEnv.value[key] = hEnv.value\r\n\r\n\t\tdbg 'final hNode', hNode\r\n\t\tdbgReturn 'endVisit', undef\r\n\t\treturn undef\r\n\r\n\t# ..........................................................\r\n\r\n\tendWalk: (hGlobalEnv) ->\r\n\r\n\t\t@value = hGlobalEnv.value    # set the final value\r\n\t\treturn undef\r\n\r\n\t# ..........................................................\r\n\r\n\tgetResult: (hOptions=undef) ->\r\n\r\n\t\tdbgEnter \"getResult\"\r\n\t\t@walk(hOptions)      # should set @result\r\n\t\tresult = @value\r\n\t\tdbgReturn \"getResult\", result\r\n\t\treturn result\r\n\r\n"
  ]
}