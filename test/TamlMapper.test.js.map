{
  "version": 3,
  "file": "TamlMapper.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\TamlMapper.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# TamlMapper.test.coffee\n\nimport {undef, isNumber, DUMP} from '@jdeighan/base-utils'\nimport {\n\tUnitTester, equal, truthy, falsy, succeeds,\n\t} from '@jdeighan/base-utils/utest'\nimport {slurp, mkpath, mydir} from '@jdeighan/base-utils/fs'\nimport {map} from '@jdeighan/mapper'\nimport {parseValue, TamlMapper} from '@jdeighan/mapper/taml'\n\n# ---------------------------------------------------------------------------\n\nequal parseValue('undef'), undef\nequal parseValue(\"null\"), null\nequal parseValue(\"true\"), true\nequal parseValue(\"false\"), false\n\ntruthy isNumber(parseValue('2'))\ntruthy isNumber(parseValue('2.5'))\ntruthy isNumber(parseValue('2a'))\nfalsy  isNumber('2a')\nfalsy  isNumber(parseValue('a2'))\n\nequal parseValue(\"«undef»\"), 'undef'\nequal parseValue(\"«null»\"),  'null'\nequal parseValue(\"«true»\"),  'true'\nequal parseValue(\"«false»\"), 'false'\n\n# ---------------------------------------------------------------------------\n# --- Test that the correct user objects are created\n\nclass ObjTester extends UnitTester\n\n\ttransformValue: (block) ->\n\n\t\tmapper = new TamlMapper(block)\n\t\tlItems = []\n\t\twhile (hNode = mapper.get())\n\t\t\tlItems.push hNode.uobj\n\t\treturn lItems\n\nobj_tester = new ObjTester()\n\n# ---------------------------------------------------------------------------\n\nobj_tester.equal \"\"\"\n\t---\n\t- undef\n\t- null\n\t- true\n\t- false\n\t- 42\n\t- 3.14159\n\t\"\"\", [\n\t\t{ type: 'listItem', value: undef }\n\t\t{ type: 'listItem', value: null }\n\t\t{ type: 'listItem', value: true }\n\t\t{ type: 'listItem', value: false }\n\t\t{ type: 'listItem', value: 42 }\n\t\t{ type: 'listItem', value: 3.14159 }\n\t\t]\n\n# ---------------------------------------------------------------------------\n\nobj_tester.equal \"\"\"\n\t---\n\t- «undef»\n\t- «null»\n\t- «true»\n\t- «false»\n\t- «42»\n\t- «3.14159»\n\t\"\"\", [\n\t\t{ type: 'listItem', value: 'undef' }\n\t\t{ type: 'listItem', value: 'null' }\n\t\t{ type: 'listItem', value: 'true' }\n\t\t{ type: 'listItem', value: 'false' }\n\t\t{ type: 'listItem', value: '42' }\n\t\t{ type: 'listItem', value: '3.14159' }\n\t\t]\n\n# ---------------------------------------------------------------------------\n\nobj_tester.equal \"\"\"\n\t---\n\t- abc\n\t-\n\t\t- a\n\t\t- b\n\t\"\"\", [\n\t\t{ type: 'listItem', value: 'abc' }\n\t\t{ type: 'listItem' }\n\t\t{ type: 'listItem', value: 'a'}\n\t\t{ type: 'listItem', value: 'b'}\n\t\t]\n\n# ---------------------------------------------------------------------------\n\nobj_tester.equal \"\"\"\n\t---\n\tfName: John\n\tlName: Deighan\n\tfullName:\n\t\t- John Deighan\n\t\"\"\", [\n\t\t{ type: 'hashItem', key: 'fName', value: 'John' }\n\t\t{ type: 'hashItem', key: 'lName', value: 'Deighan' }\n\t\t{ type: 'hashItem', key: 'fullName'}\n\t\t{ type: 'listItem', value: 'John Deighan' }\n\t\t]\n\n# ---------------------------------------------------------------------------\n# --- Test that the correct result object is obtained\n\nclass ResultTester extends UnitTester\n\n\ttransformValue: (block) ->\n\n\t\tmapper = new TamlMapper(block)\n\t\treturn mapper.getResult()\n\ntester = new ResultTester()\n\n# ---------------------------------------------------------------------------\n\ntester.equal \"\"\"\n\t---\n\t- abc\n\t- def\n\t\"\"\", ['abc', 'def']\n\ntester.equal \"\"\"\n\t---\n\tfName: John\n\tlName: Deighan\n\tfullName: John Deighan\n\t\"\"\", {\n\t\tfName: 'John'\n\t\tlName: 'Deighan'\n\t\tfullName: 'John Deighan'\n\t\t}\n\ntester.equal \"\"\"\n\t---\n\t-\n\t\t- a\n\t\t- b\n\t- def\n\t\"\"\", [['a','b'], 'def']\n\ntester.equal \"\"\"\n\t---\n\t-\n\t\tx: 1\n\t\ty: 2\n\t- def\n\t\"\"\", [{x:1, y:2}, 'def']\n\ntester.equal \"\"\"\n\t---\n\ttitle:\n\t\ten: Aladdin and the magic lamp\n\t\tzh: 阿拉丁和神灯\n\t\tpinyin: Ā lādīng hé shén dēng\n\tauthor:\n\t\ten: Hanna Diyab\n\tlCharacters:\n\t\t-\n\t\t\ten: Aladdin\n\t\t\tzh: 阿拉丁\n\t\t\tpinyin: Ā lādīng\n\tlParagraphs:\n\t\t-\n\t\t\tlSentences:\n\t\t\t\t-\n\t\t\t\t\ten: \"We can share the gems in the cave.\"\n\t\t\t\t\tzh: “我们可以分享洞穴里的宝石。”\n\t\t\t\t\tpinyin: “Wǒmen kěyǐ fēnxiǎng dòngxué lǐ de bǎoshí.”\n\t\"\"\", {\n\t\ttitle: {\n\t\t\ten: 'Aladdin and the magic lamp'\n\t\t\tzh: '阿拉丁和神灯'\n\t\t\tpinyin: 'Ā lādīng hé shén dēng'\n\t\t\t}\n\t\tauthor: {\n\t\t\ten: 'Hanna Diyab'\n\t\t\t}\n\t\tlCharacters: [\n\t\t\t{\n\t\t\t\ten: 'Aladdin'\n\t\t\t\tzh: '阿拉丁'\n\t\t\t\tpinyin: 'Ā lādīng'\n\t\t\t\t}\n\t\t\t]\n\t\tlParagraphs: [\n\t\t\t{\n\t\t\t\tlSentences: [\n\t\t\t\t\t{\n\t\t\t\t\t\ten: '\"We can share the gems in the cave.\"'\n\t\t\t\t\t\tzh: '“我们可以分享洞穴里的宝石。”'\n\t\t\t\t\t\tpinyin: '“Wǒmen kěyǐ fēnxiǎng dòngxué lǐ de bǎoshí.”'\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\n# ---------------------------------------------------------------------------\n\nsucceeds () =>\n\tdir = mydir(import.meta.url)\n\tblock = slurp(mkpath(dir, 'beauty_and_the_beast.taml'))\n\tmapper = new TamlMapper(block)\n\tresult = mapper.getResult()\n"
  ]
}