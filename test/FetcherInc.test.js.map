{
  "version": 3,
  "file": "FetcherInc.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\FetcherInc.test.coffee"
  ],
  "names": [],
  "mappings": ";AAAwB;AAExB,OAAA;EAAQ,KAAR;EAAe,OAAf;CAAA,MAAA;;AACA,OAAA;EAAQ,MAAR;EAAgB,KAAhB;CAAA,MAAA;;AACA,OAAA;EAAQ,GAAR;EAAa,QAAb;CAAA,MAAA;;AACA,OAAA;EAAQ,YAAR;CAAA,MAAA;;AACA,OAAA;EAAQ,KAAR;EAAe,UAAf;CAAA,MAAA;;AAEA,OAAA;EAAQ,UAAR;CAAA,MAAA,8BARwB;;;;;;;AAgBxB,CAAC,QAAA,CAAA,CAAA;AACD,MAAA,QAAA,EAAA;EAAO,WAAN,MAAA,SAAA,QAAuB,WAAvB;IAEC,cAAgB,CAAC,MAAD,CAAA;AAElB,UAAA;MAAG,OAAA,GAAU,IAAI,UAAJ,CAAe,MAAf;AACV,aAAO,OAAO,CAAC,QAAR,CAAA;IAHQ;;EAFjB;EAOA,MAAA,GAAS,IAAI,QAAJ,CAAA,EAPV;;EAWC,MAAM,CAAC,KAAP,CAAa,EAAb,EAAiB,CAAA;GAAA,CAAjB,EAGM,CAAA;GAAA,CAHN,EAXD;;;;;;;;;;;;;;;;;;EAqCC,MAAM,CAAC,KAAP,CAAa,EAAb,EAAiB;IAChB,MAAA,EAAQ,wBADQ;IAEhB,OAAA,EAAS,CAAA;;GAAA;EAFO,CAAjB,EAOI,CAAA;;;;GAAA,CAPJ;EAeA,MAAM,CAAC,IAAP,CAAY,EAAZ,EAAgB;IACf,MAAA,EAAQ,wBADO;IAEf,OAAA,EAAS,CAAA;;GAAA;EAFM,CAAhB,EAMQ,CAAA;GAAA,CANR;SAWA,MAAM,CAAC,IAAP,CAAY,EAAZ,EAAgB;IACf,MAAA,EAAQ,wBADO;IAEf,OAAA,EAAS,CAAA;;GAAA;EAFM,CAAhB,EAMQ,CAAA;;;;;;;GAAA,CANR;AAhEA,CAAD,CAAA,CAAA,EAhBwB;;;AAqGxB,CAAC,QAAA,CAAA,CAAA;AACD,MAAA,QAAA,EAAA;EAAO,WAAN,MAAA,SAAA,QAAuB,WAAvB;IAEC,cAAgB,CAAC,MAAD,CAAA;AAElB,UAAA,OAAA,EAAA,KAAA,EAAA;MAAG,OAAA,GAAU,IAAI,UAAJ,CAAe,MAAf;MACV,MAAA,GAAS;AACT,aAAM,OAAA,CAAQ,KAAA,GAAQ,OAAO,CAAC,KAAR,CAAA,CAAhB,CAAN;QACC,MAAM,CAAC,IAAP,CAAY,KAAZ;MADD;AAEA,aAAO;IANQ;;EAFjB;EAUA,MAAA,GAAS,IAAI,QAAJ,CAAA,EAVV;;SAcC,MAAM,CAAC,IAAP,CAAY,GAAZ,EAAiB;IAChB,MAAA,EAAQ,wBADQ;IAEhB,OAAA,EAAS,CAAA;;GAAA;EAFO,CAAjB,EAMQ;IACN;MACC,KAAA,EAAO,CADR;MAEC,GAAA,EAAK,KAFN;MAGC,MAAA,EAAQ;IAHT,CADM;IAKN;MACC,KAAA,EAAO,CADR;MAEC,GAAA,EAAK,KAFN;MAGC,MAAA,EAAQ;IAHT,CALM;IASN;MACC,KAAA,EAAO,CADR;MAEC,GAAA,EAAK,KAFN;MAGC,MAAA,EAAQ;IAHT,CATM;IAaN;MACC,KAAA,EAAO,CADR;MAEC,GAAA,EAAK,OAFN;MAGC,MAAA,EAAQ;IAHT,CAbM;IAiBN;MACC,KAAA,EAAO,CADR;MAEC,GAAA,EAAK,OAFN;MAGC,MAAA,EAAQ;IAHT,CAjBM;IAqBN;MACC,KAAA,EAAO,CADR;MAEC,GAAA,EAAK,EAFN;MAGC,MAAA,EAAQ;IAHT,CArBM;IAyBN;MACC,KAAA,EAAO,CADR;MAEC,GAAA,EAAK,EAFN;MAGC,MAAA,EAAQ;IAHT,CAzBM;IA6BN;MACC,KAAA,EAAO,CADR;MAEC,GAAA,EAAK,KAFN;MAGC,MAAA,EAAQ;IAHT,CA7BM;GANR;AAfA,CAAD,CAAA,CAAA",
  "sourcesContent": [
    "# FetcherInc.test.coffee\r\n\r\nimport {undef, defined} from '@jdeighan/base-utils'\r\nimport {assert, croak} from '@jdeighan/base-utils/exceptions'\r\nimport {LOG, LOGVALUE} from '@jdeighan/base-utils/log'\r\nimport {setDebugging} from '@jdeighan/base-utils/debug'\r\nimport {utest, UnitTester} from '@jdeighan/unit-tester'\r\n\r\nimport {FetcherInc} from '@jdeighan/mapper/fetcherinc'\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- FetcherInc should:\r\n#        - handle #include\r\n#        - override sourceInfoStr() to include include files\r\n# ---------------------------------------------------------------------------\r\n\r\n(() ->\r\n\tclass MyTester extends UnitTester\r\n\r\n\t\ttransformValue: (hInput) ->\r\n\r\n\t\t\tfetcher = new FetcherInc(hInput)\r\n\t\t\treturn fetcher.getBlock()\r\n\r\n\ttester = new MyTester()\r\n\r\n\t# ----------------------------------------------------------\r\n\r\n\ttester.equal 28, \"\"\"\r\n\t\tabc\r\n\t\tdef\r\n\t\t\"\"\", \"\"\"\r\n\t\tabc\r\n\t\tdef\r\n\t\t\"\"\"\r\n\r\n\t# ------------------------------------------------------------------------\r\n\t# --- Test using #include\r\n\r\n\t# ------------------------------------------------------------------------\r\n\t# File include.md (in /test) contains:\r\n\t# header\r\n\t# ======\r\n\t# ------------------------------------------------------------------------\r\n\t# File include2.md (in /test) contains:\r\n\t# top\r\n\t# ===\r\n\t#    #include title.md\r\n\t# ------------------------------------------------------------------------\r\n\t# File title.md (in /test/markdown) contains:\r\n\t# title\r\n\t# =====\r\n\t# ------------------------------------------------------------------------\r\n\r\n\ttester.equal 54, {\r\n\t\tsource: 'FetcherInc.test.coffee'\r\n\t\tcontent: \"\"\"\r\n\t\t\tabc\r\n\t\t\t#include include.md\r\n\t\t\tghi\r\n\t\t\t\"\"\"\r\n\t\t}, \"\"\"\r\n\t\tabc\r\n\t\theader\r\n\t\t======\r\n\r\n\t\tghi\r\n\t\t\"\"\"\r\n\r\n\ttester.like 69, {\r\n\t\tsource: 'FetcherInc.test.coffee'\r\n\t\tcontent: \"\"\"\r\n\t\t\tabc\r\n\t\t\t\t\t#include include.md\r\n\t\t\tghi\r\n\t\t\t\"\"\"}, \"\"\"\r\n\t\tabc #include include.md\r\n\t\tghi\r\n\t\t\"\"\"\r\n\r\n\ttester.like 80, {\r\n\t\tsource: 'FetcherInc.test.coffee'\r\n\t\tcontent: \"\"\"\r\n\t\t\tabc\r\n\t\t\t#include include2.md\r\n\t\t\tghi\r\n\t\t\t\"\"\"}, \"\"\"\r\n\t\tabc\r\n\t\ttop\r\n\t\t===\r\n\t\t\ttitle\r\n\t\t\t=====\r\n\r\n\r\n\t\tghi\r\n\t\t\"\"\"\r\n\r\n\t)()\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\n(() ->\r\n\tclass MyTester extends UnitTester\r\n\r\n\t\ttransformValue: (hInput) ->\r\n\r\n\t\t\tfetcher = new FetcherInc(hInput)\r\n\t\t\tlNodes = []\r\n\t\t\twhile defined(hNode = fetcher.fetch())\r\n\t\t\t\tlNodes.push hNode\r\n\t\t\treturn lNodes\r\n\r\n\ttester = new MyTester()\r\n\r\n\t# ----------------------------------------------------------\r\n\r\n\ttester.like 120, {\r\n\t\tsource: 'FetcherInc.test.coffee'\r\n\t\tcontent: \"\"\"\r\n\t\t\tabc\r\n\t\t\t#include include2.md\r\n\t\t\tghi\r\n\t\t\t\"\"\"}, [\r\n\t\t\t{\r\n\t\t\t\tlevel: 0,\r\n\t\t\t\tstr: 'abc',\r\n\t\t\t\tsource: 'FetcherInc.test.coffee/1'}\r\n\t\t\t{\r\n\t\t\t\tlevel: 0,\r\n\t\t\t\tstr: 'top',\r\n\t\t\t\tsource: 'FetcherInc.test.coffee/2 include2.md/1'}\r\n\t\t\t{\r\n\t\t\t\tlevel: 0,\r\n\t\t\t\tstr: '===',\r\n\t\t\t\tsource: 'FetcherInc.test.coffee/2 include2.md/2'}\r\n\t\t\t{\r\n\t\t\t\tlevel: 1,\r\n\t\t\t\tstr: 'title',\r\n\t\t\t\tsource: 'FetcherInc.test.coffee/2 include2.md/3 title.md/1'}\r\n\t\t\t{\r\n\t\t\t\tlevel: 1,\r\n\t\t\t\tstr: '=====',\r\n\t\t\t\tsource: 'FetcherInc.test.coffee/2 include2.md/3 title.md/2'}\r\n\t\t\t{\r\n\t\t\t\tlevel: 0,\r\n\t\t\t\tstr: '',\r\n\t\t\t\tsource: 'FetcherInc.test.coffee/2 include2.md/3 title.md/3'}\r\n\t\t\t{\r\n\t\t\t\tlevel: 0,\r\n\t\t\t\tstr: '',\r\n\t\t\t\tsource: 'FetcherInc.test.coffee/2 include2.md/4'}\r\n\t\t\t{\r\n\t\t\t\tlevel: 0,\r\n\t\t\t\tstr: 'ghi',\r\n\t\t\t\tsource: 'FetcherInc.test.coffee/3'}\r\n\t\t\t]\r\n\r\n\t)()\r\n"
  ]
}