{
  "version": 3,
  "file": "Getter.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\Getter.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# Getter.test.coffee\n\nimport {\n\tundef, defined, notdefined, rtrim,\n\t} from '@jdeighan/base-utils'\nimport {assert, croak} from '@jdeighan/base-utils/exceptions'\nimport {LOG} from '@jdeighan/base-utils/log'\nimport {\n\tsetDebugging, dbgEnter, dbgReturn, dbg,\n\t} from '@jdeighan/base-utils/debug'\nimport {UnitTester, utest} from '@jdeighan/unit-tester'\n\nimport {Node} from '@jdeighan/mapper/node'\nimport {Getter} from '@jdeighan/mapper/getter'\n\n# ---------------------------------------------------------------------------\n# --- Getter should:\n#     ✓ implement get()\n#     ✓ define and replace constants\n#     - allow defining special types\n#          - by overriding getItemType(hNode) and mapNode(hNode)\n#     - implement generator allNodes()\n#          - by overriding procNode()\n# ---------------------------------------------------------------------------\n# --- Test get()\n\n(() ->\n\n\tgetter = new Getter(\"\"\"\n\t\tabc\n\t\tdef\n\t\tghi\n\t\t\"\"\")\n\n\tutest.like 35, getter.get(), {\n\t\tstr: 'abc'\n\t\tlevel: 0\n\t\t}\n\n\tlItems = []\n\tfor hNode from getter.allNodes()\n\t\tlItems.push hNode\n\n\tutest.like 44, lItems, [\n\t\t{str: 'def'}\n\t\t{str: 'ghi'}\n\t\t]\n\n\tutest.equal 49, getter.get(), undef\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\n\t# --- A generator is a function that, when you call it,\n\t#     it returns an iterator\n\n\tgenerator = () ->\n\t\tyield 'line1'\n\t\tyield 'line2'\n\t\tyield 'line3'\n\t\treturn\n\n\t# --- You can pass any iterator to the Getter() constructor\n\tgetter = new Getter({content: generator()})\n\n\tutest.like 68, node1 = getter.get(), {\n\t\tstr: 'line1'\n\t\tlevel: 0\n\t\tsource: \"<unknown>/1\"\n\t\t}\n\tutest.like 73, node2 = getter.get(), {\n\t\tstr: 'line2'\n\t\tlevel: 0\n\t\tsource: \"<unknown>/2\"\n\t\t}\n\n\tutest.like 79, node3 = getter.get(), {\n\t\tstr: 'line3'\n\t\tlevel: 0\n\t\tsource: \"<unknown>/3\"\n\t\t}\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\n\tgetter = new Getter(\"\"\"\n\t\t\tif (x == 2)\n\t\t\t\tdoThis\n\t\t\t\tdoThat\n\t\t\t\t\tthen this\n\t\t\twhile (x > 2)\n\t\t\t\t--x\n\t\t\t\"\"\")\n\n\tutest.like 99, getter.get(),  {str: 'if (x == 2)', level: 0}\n\tutest.like 100, getter.get(),  {str: 'doThis', level: 1}\n\tutest.like 101, getter.get(),  {str: 'doThat', level: 1}\n\tutest.like 102, getter.get(),  {str: 'then this', level: 2}\n\tutest.like 103, getter.get(),  {str: 'while (x > 2)', level: 0}\n\tutest.like 104, getter.get(),  {str: '--x', level: 1}\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tgetter = new Getter(\"\"\"\n\t\tabc\n\t\tmeaning is __meaning__\n\t\tmy name is __name__\n\t\t\"\"\")\n\tgetter.setConst 'meaning', '42'\n\tgetter.setConst 'name', 'John Deighan'\n\tutest.equal 118, getter.getBlock(), \"\"\"\n\t\tabc\n\t\tmeaning is 42\n\t\tmy name is John Deighan\n\t\t\"\"\"\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\t# --- Pre-declare all variables that are assigned to\n\n\tclass VarGetter extends Getter\n\n\t\tconstructor: (hInput, options) ->\n\n\t\t\tsuper hInput, options\n\t\t\t@lVars = []\n\t\t\treturn\n\n\t\t# .......................................................\n\n\t\tmapNode: (hNode) ->\n\n\t\t\tdbgEnter 'VarGetter.mapNode', hNode\n\t\t\tif lMatches = hNode.str.match(///^\n\t\t\t\t\t([A-Za-z_][A-Za-z0-9_]*)    # an identifier\n\t\t\t\t\t\\s*\n\t\t\t\t\t=\n\t\t\t\t\t///)\n\t\t\t\t[_, varName] = lMatches\n\t\t\t\tdbg \"found var #{varName}\"\n\t\t\t\t@lVars.push varName\n\n\t\t\tdbgReturn 'VarGetter.mapNode', hNode.str\n\t\t\treturn hNode.str\n\n\t\t# .......................................................\n\n\t\tfinalizeBlock: (block) ->\n\n\t\t\tdbgEnter 'finalizeBlock'\n\t\t\tstrVars = @lVars.join(',')\n\t\t\tresult = block.replace('__vars__', strVars)\n\t\t\tdbgReturn 'finalizeBlock', result\n\t\t\treturn result\n\n\t\t# .......................................................\n\n\tgetter = new VarGetter(\"\"\"\n\t\t\tvar __vars__\n\t\t\tx = 2\n\t\t\ty = 3\n\t\t\t\"\"\")\n\tresult = getter.getBlock()\n\tutest.equal 172, result, \"\"\"\n\t\t\tvar x,y\n\t\t\tx = 2\n\t\t\ty = 3\n\t\t\t\"\"\"\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\t# --- change '#<cmd> <args>' to 'COMMAND <cmd> <args>'\n\t#     skip comments\n\n\tclass MyGetter extends Getter\n\n\t\tgetItemType: (hNode) ->\n\t\t\t# --- We go ahead and set uobj in here,\n\t\t\t#     then just return it in mapNode()\n\t\t\t#     upper case anything else\n\n\t\t\t{str} = hNode\n\t\t\tassert notdefined(str.match(/^\\s/)), \"str has leading ws\"\n\t\t\tlMatches = str.match(///^\n\t\t\t\t\\#\n\t\t\t\t(\\s*)\n\t\t\t\t(\\S*)\n\t\t\t\t\\s*\n\t\t\t\t(.*)\n\t\t\t\t$///)\n\t\t\tif notdefined(lMatches)\n\t\t\t\thNode.uobj = hNode.str.toUpperCase()\n\t\t\t\treturn undef     # not a special type\n\t\t\t[_, ws, cmd, args] = lMatches\n\t\t\tif (ws.length > 0) || (cmd.length == 0)\n\t\t\t\thNode.uobj = undef   # forces comments to be skipped\n\t\t\t\treturn 'comment'\n\t\t\telse\n\t\t\t\thNode.uobj = \"COMMAND #{cmd} #{args}\"\n\t\t\t\treturn 'command'\n\n\t\tmapNode: (hNode) ->\n\n\t\t\treturn hNode.uobj\n\n\t# .......................................................\n\n\tgetter = new MyGetter(\"\"\"\n\t\t\tabc\n\t\t\t# this AND the following line are comments\n\t\t\t#\n\t\t\t#docmd temp.txt\n\t\t\tx = 2\n\t\t\ty = 3\n\t\t\t\"\"\")\n\tresult = getter.getBlock()\n\tutest.equal 227, result, \"\"\"\n\t\t\tABC\n\t\t\tCOMMAND docmd temp.txt\n\t\t\tX = 2\n\t\t\tY = 3\n\t\t\t\"\"\"\n\n\t)()\n"
  ]
}