// Generated by CoffeeScript 2.6.1
// symbols.test.coffee
var SymbolsTester, simple, tester;

import {
  UnitTesterNorm,
  UnitTester
} from '@jdeighan/unit-tester';

import {
  undef
} from '@jdeighan/coffee-utils';

import {
  mydir,
  mkpath
} from '@jdeighan/coffee-utils/fs';

import {
  log
} from '@jdeighan/coffee-utils/log';

import {
  setDebugging
} from '@jdeighan/coffee-utils/debug';

import {
  getAvailSymbols,
  getNeededSymbols
} from '@jdeighan/mapper/symbols';

simple = new UnitTesterNorm();

// ---------------------------------------------------------------------------
// Contents of .symbols:
// fs
//    *fs exists readFile

// @jdeighan/coffee-utils
//    say undef

// @jdeighan/coffee-utils/fs
//    mydir mkpath slurp barf

// @jdeighan/coffee-utils/log
//    log (as logger)
simple.equal(28, getAvailSymbols(import.meta.url), {
  barf: {
    lib: '@jdeighan/coffee-utils/fs'
  },
  exists: {
    lib: 'fs'
  },
  fs: {
    isDefault: true,
    lib: 'fs'
  },
  logger: {
    lib: '@jdeighan/coffee-utils/log',
    src: 'log'
  },
  mkpath: {
    lib: '@jdeighan/coffee-utils/fs'
  },
  mydir: {
    lib: '@jdeighan/coffee-utils/fs'
  },
  readFile: {
    lib: 'fs'
  },
  say: {
    lib: '@jdeighan/coffee-utils'
  },
  slurp: {
    lib: '@jdeighan/coffee-utils/fs'
  },
  undef: {
    lib: '@jdeighan/coffee-utils'
  }
});

// ---------------------------------------------------------------------------
SymbolsTester = class SymbolsTester extends UnitTester {
  transformValue(text) {
    return getNeededSymbols(text);
  }

};

tester = new SymbolsTester();

// ---------------------------------------------------------------------------
simple.equal(74, getNeededSymbols(`x = 23
y = x + 5`), []);

simple.equal(79, getNeededSymbols(`x = 23
y = x + 5`), []);

simple.equal(84, getNeededSymbols(`x = z
y = x + 5`), ['z']);

simple.equal(89, getNeededSymbols(`x = myfunc(4)
y = x + 5`), ['myfunc']);

simple.equal(94, getNeededSymbols(`import {z} from 'somewhere'
x = z
y = x + 5`), []);

simple.equal(100, getNeededSymbols(`import {myfunc} from 'somewhere'
x = myfunc(4)
y = x + 5`), []);
