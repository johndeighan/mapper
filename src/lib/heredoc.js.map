{
  "version": 3,
  "file": "heredoc.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\heredoc.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# heredoc.coffee\r\n\r\nimport {\r\n\tundef, defined, notdefined, pass, escapeStr, OL, CWS, className,\r\n\tisString, isNonEmptyString, isHash, isEmpty, nonEmpty, isObject,\r\n\ttoBlock,\r\n\t} from '@jdeighan/base-utils'\r\nimport {assert, croak} from '@jdeighan/base-utils/exceptions'\r\nimport {LOG} from '@jdeighan/base-utils/log'\r\nimport {\r\n\tdbg, dbgEnter, dbgReturn,\r\n\t} from '@jdeighan/base-utils/debug'\r\nimport {isTAML, fromTAML} from '@jdeighan/base-utils/taml'\r\nimport {\r\n\tfirstLine, remainingLines, joinBlocks,\r\n\t} from '@jdeighan/coffee-utils/block'\r\nimport {indented, undented} from '@jdeighan/coffee-utils/indent'\r\n\r\nimport {Fetcher} from '@jdeighan/mapper/fetcher'\r\n\r\nlHereDocs = []   # checked in this order - list of type names\r\nhHereDocs = {}   # {type: obj}\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport replaceHereDocs = (line, fetcher) =>\r\n\r\n\tdbgEnter \"replaceHereDocs\", line\r\n\tassert isString(line), \"not a string\"\r\n\tassert (fetcher instanceof Fetcher), \"not a Fetcher\"\r\n\r\n\tlParts = lineToParts(line)\r\n\tdbg 'lParts', lParts\r\n\tlNewParts = []    # to be joined to form new line\r\n\tfor part in lParts\r\n\t\tif part == '<<<'\r\n\t\t\tdbg \"get HEREDOC lines until blank line\"\r\n\r\n\t\t\tlLines = []\r\n\t\t\twhile defined(hNode = fetcher.fetch()) && ! hNode.isEmptyLine()\r\n\t\t\t\tlLines.push indented(hNode.str, hNode.level)\r\n\r\n\t\t\tblock = undented(toBlock(lLines))\r\n\t\t\tdbg 'block', block\r\n\r\n\t\t\tstr = mapHereDoc(block)\r\n\t\t\tassert isString(str), \"str is #{OL(str)}\"\r\n\t\t\tdbg 'mapped block', str\r\n\t\t\tlNewParts.push str\r\n\t\telse\r\n\t\t\tlNewParts.push part    # keep as is\r\n\r\n\tresult = lNewParts.join('')\r\n\tdbgReturn \"replaceHereDocs\", result\r\n\treturn result\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport lineToParts = (line) ->\r\n\t# --- Always returns an odd number of parts\r\n\t#     Odd numbered parts are '<<<', Even numbered parts are not '<<<'\r\n\r\n\tlParts = []\r\n\tpos = 0\r\n\twhile ((start = line.indexOf('<<<', pos)) != -1)\r\n\t\tlParts.push line.substring(pos, start)\r\n\t\tlParts.push '<<<'\r\n\t\tpos = start + 3\r\n\tlParts.push line.substring(pos)\r\n\treturn lParts\r\n\r\n# ---------------------------------------------------------------------------\r\n# Returns a CieloScript expression or undef\r\n\r\nexport mapHereDoc = (block) ->\r\n\r\n\tdbgEnter \"mapHereDoc\", block\r\n\tassert isString(block), \"not a string\"\r\n\tfor type in lHereDocs\r\n\t\tdbg \"TRY #{type} HEREDOC\"\r\n\t\theredocObj = hHereDocs[type]\r\n\t\tresult = heredocObj.mapToCielo(block)\r\n\t\tif defined(result)\r\n\t\t\tassert isString(result), \"result not a string\"\r\n\t\t\tdbg \"   - FOUND #{type} HEREDOC\"\r\n\t\t\tdbgReturn \"mapHereDoc\", result\r\n\t\t\treturn result\r\n\t\telse\r\n\t\t\tdbg \"   - NOT A #{type} HEREDOC\"\r\n\r\n\tdbg \"HEREDOC type 'default'\"\r\n\tresult = JSON.stringify(block)    # can directly replace <<<\r\n\tdbgReturn \"mapHereDoc\", result\r\n\treturn result\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport addHereDocType = (type, obj) ->\r\n\r\n\tdbgEnter \"addHereDocType\", type, obj\r\n\tassert isNonEmptyString(type), \"type is #{OL(type)}\"\r\n\tif ! isObject(obj, 'mapToCielo')\r\n\t\t[type, subtype] = jsType(obj)\r\n\t\tconsole.log \"type = #{OL(type)}\"\r\n\t\tconsole.log \"subtype = #{OL(subtype)}\"\r\n\tassert isObject(obj, 'mapToCielo'), \"Bad input object: #{OL(obj)}\"\r\n\tassert (obj instanceof BaseHereDoc), \"not a BaseHereDoc\"\r\n\tassert notdefined(hHereDocs[type]), \"Heredoc type #{type} already installed\"\r\n\tlHereDocs.push type\r\n\thHereDocs[type] = obj\r\n\tdbgReturn \"addHereDocType\"\r\n\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n# ---------------------------------------------------------------------------\r\n# --- To extend,\r\n#        define mapToCielo(block) that:\r\n#           returns undef if it's not your HEREDOC type\r\n#           else returns a CieloScript expression\r\n\r\nexport class BaseHereDoc\r\n\r\n\tmapToCielo: (block) ->\r\n\r\n\t\treturn undef\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class ExplicitBlockHereDoc extends BaseHereDoc\r\n\t# --- First line must be '==='\r\n\t#     Return value is quoted string of remaining lines\r\n\r\n\tmapToCielo: (block) ->\r\n\r\n\t\tif firstLine(block) != '==='\r\n\t\t\treturn undef\r\n\t\treturn JSON.stringify(remainingLines(block))\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class OneLineHereDoc extends BaseHereDoc\r\n\t# --- First line must begin with '...'\r\n\t#     Return value is single line string after '...' with\r\n\t#        runs of whitespace replaced with a single space char\r\n\r\n\tmapToCielo: (block) ->\r\n\r\n\t\tif (block.indexOf('...') != 0)\r\n\t\t\treturn undef\r\n\t\treturn JSON.stringify(block.substring(3).trim().replace(/\\s+/gs, ' '))\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class TAMLHereDoc extends BaseHereDoc\r\n\t# --- First line must be '---'\r\n\r\n\tmapToCielo: (block) ->\r\n\r\n\t\tdbgEnter 'TAMLHereDoc.mapToCielo', block\r\n\t\tif firstLine(block) != '---'\r\n\t\t\tdbgReturn 'TAMLHereDoc.mapToCielo', undef\r\n\t\t\treturn undef\r\n\t\tobj = fromTAML(block)\r\n\t\tresult = JSON.stringify(obj)\r\n\t\tdbgReturn 'TAMLHereDoc.mapToCielo', result\r\n\t\treturn result\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\n# --- Add the standard HEREDOC types\r\naddHereDocType 'one line', new OneLineHereDoc()\r\naddHereDocType 'block', new ExplicitBlockHereDoc()\r\naddHereDocType 'taml', new TAMLHereDoc()\r\n"
  ]
}